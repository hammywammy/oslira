#!/usr/bin/env node

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// Get current directory in ES modules
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Environment variables to inject - these match your Netlify variables exactly
const envVars = {
  SUPABASE_URL: process.env.SUPABASE_URL,
  SUPABASE_ANON_KEY: process.env.SUPABASE_ANON_KEY,
  WORKER_URL: process.env.WORKER_URL,
  STRIPE_PUBLISHABLE_KEY: process.env.STRIPE_PUBLISHABLE_KEY,
  STRIPE_SECRET_KEY: process.env.STRIPE_SECRET_KEY  // Only for build-time validation
};

console.log('🔍 Checking Netlify environment variables...');

// Show what's available (for debugging)
console.log('Available env vars:', Object.keys(process.env).filter(k => 
  ['SUPABASE', 'WORKER', 'STRIPE'].some(prefix => k.includes(prefix))
));

// Validate required environment variables (frontend-safe only)
const requiredForFrontend = ['SUPABASE_URL', 'SUPABASE_ANON_KEY', 'WORKER_URL', 'STRIPE_PUBLISHABLE_KEY'];
const missing = requiredForFrontend.filter(key => !envVars[key]);

if (missing.length > 0) {
  console.error('❌ Missing required environment variables:', missing.join(', '));
  console.log('💡 Make sure these are set in Netlify Site Settings → Environment Variables');
  process.exit(1);
}

// Create environment config file - ONLY frontend-safe values
const configContent = `// Auto-generated by inject-env.js - DO NOT EDIT MANUALLY
window.CONFIG = {
  supabaseUrl: '${envVars.SUPABASE_URL}',
  supabaseAnonKey: '${envVars.SUPABASE_ANON_KEY}',
  workerUrl: '${envVars.WORKER_URL}',
  stripePublishableKey: '${envVars.STRIPE_PUBLISHABLE_KEY}'
};

console.log('✅ Environment configuration loaded from Netlify');
console.log('🔧 Available services:', Object.keys(window.CONFIG));`;

// Write to public directory
const publicDir = path.join(__dirname, 'public', 'pages');
if (!fs.existsSync(publicDir)) {
  fs.mkdirSync(publicDir, { recursive: true });
  console.log('📁 Created public directory');
}

const configPath = path.join(publicDir, 'env-config.js');
fs.writeFileSync(configPath, configContent);

console.log('✅ Environment variables injected successfully');
console.log('📁 Created:', configPath);
console.log('🔧 Frontend config contains:');
requiredForFrontend.forEach(key => {
  console.log(`   ${key}: ${envVars[key] ? '✅ Set' : '❌ Missing'}`);
});
